#!/bin/bash

set -euo pipefail


#======================================================================================================================
# If using a custom wp-config.php file and it exists already, do nothing.
#======================================================================================================================

if [ "${WP_CONFIG_GENERATE}" = "custom" ] && [ -f "${WP_CONFIG}" ] ; then
    bf-echo "Using custom wp-config.php" "wp/setup-config"
    exit 0
fi


#======================================================================================================================
# If wp-config.php is a file, move it to /wp - otherwise generate it - and then create a link.
#======================================================================================================================

bf-echo "Generating wp-config.php..." "wp/setup-config"

# ensure all required environment variables are set
[[ -z "${WP_DB_NAME-}" ]] && bf-error "WP_DB_NAME must be set." "wp/setup-config"
[[ -z "${WP_DB_USER-}" ]] && bf-error "WP_DB_USER must be set." "wp/setup-config"
[[ -z "${WP_DB_PASS-}" ]] && bf-error "WP_DB_PASS must be set." "wp/setup-config"
[[ -z "${WP_DB_HOST-}" ]] && bf-error "WP_DB_HOST must be set." "wp/setup-config"

# generate and read salt
${WP_LIB}/generate-salt
export AUTH=`cat ${WP_SALT}`

# generate config from the template
bf-debug "Generating ${WP_CONFIG}." "wp/setup-config"
bf-esh ${BF_TEMPLATES}/wp-config.php.esh ${WP_CONFIG}

# set permissions (write access is required by some plugins, e.g. caching / optimise plugins)
bf-ch -o www:www -m 0600 ${WP_CONFIG}

if [ "${WP_CONFIG_GENERATE}" = "harden" ] ; then
    bf-debug "Harden wp.config.php to be read-only." "wp/setup-config"
    bf-ch -m 0400 ${WP_CONFIG}
fi

bf-done "wp/setup-config"
