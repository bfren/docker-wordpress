#!/usr/bin/nu

use bf
use bf-php

# Absolute path to WordPress source directory
const src = "/etc/bf/src/wordpress"

def main [] {
    # installed required and recommended extensions
    cd /tmp
    bf write $"Installing PHP extensions."
    bf-php ext install_from_file

    # install WordPress source files, content directory and default plugins
    bf write debug $"WordPress source directory: ($src)."
    install_source
    install_content
    store_plugin_versions

    # add bf-wordpress module to config
    bf config use bf-wordpress

    # cleanup
    bf write "Removing /www files and directories."
    bf del force /www/*
}

# Download and install WordPress source files
def install_source [] {
    # add dependencies
    bf write "Adding installation dependencies." install_source
    bf pkg install ["--virtual" ".install" "unzip"]

    # get version and locale
    let wp_version = bf fs read WP_VERSION
    let wp_locale = bf fs read WP_LOCALE

    # save WordPress version to build log
    bf build add WordPress $wp_version

    # build WordPress download URL
    let values = {
        subdomain: ($wp_locale | str replace "_" "-")
        version: $wp_version
        locale: $wp_locale
    }
    let url = bf string format $"https://{subdomain}.wordpress.org/wordpress-{version}-{locale}.zip" $values
    bf write debug $"WordPress download url: ($url)." install_source

    # get source download hash
    let hash = http get --raw $"($url).sha1"
    bf write debug $"SHA1 hash for WordPress ($wp_version) [($wp_locale)]:(char newline)($hash)" install_source

    # download source files to /tmp and verify checksum
    bf write $"Downloading WordPress ($wp_version) [($wp_locale)]." install_source
    let zip = "wp.zip"
    http get --raw $url | save --progress $zip
    $"($hash)  ($zip)" | ^sha1sum -c -

    # unzip files
    let tmp = $"/tmp/wordpress"
    bf write $"Unzipping source download files to ($tmp)." install_source
    ^unzip -oq $zip
    rm $zip
    if ($tmp | bf fs is_not_dir) { bf write error "WordPress not downloaded." install_source }

    # move files to src directory
    bf write $"Moving source files to ($src)." install_source
    mv $tmp $src
    if ($src | bf fs is_not_dir) { bf write error "WordPress not installed." install_source }

    # set permissions
    bf write $"Setting permissions on ($src)." install_source
    [$src "www:www" 0400 0500] | bf ch apply

    # remove installation dependencies
    bf pkg remove [".install"]
}

# Install WordPress content
def install_content [] {
    # define paths to content directories
    let wp_content_src = $"($src)/wp-content"
    bf write debug $"WordPress source wp-content directory: ($wp_content_src)." install_content

    let wp_content_default = $"($src)/wp-content-default"
    bf write debug $"WordPress default wp-content directory: ($wp_content_default)." install_content

    # create a copy of the WordPress content directory
    cp -r $wp_content_src $wp_content_default
}

# Store plugin versions
def store_plugin_versions [] {
    # read version file and store as an environment variable
    let store = {|x|
        let file = $"($x)_VERSION"
        bf fs read $file | bf env set $"WP_PLUGIN_($file)" $in
    }

    # Ninja Firewall
    do $store NINJAFIREWALL

    # WebAuthn
    do $store WP-WEBAUTHN
}
